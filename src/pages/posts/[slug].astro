---
import { getCollection, type CollectionEntry } from "astro:content";
import Layout from "../../components/layout.astro";
import Tag from "../../components/tag.astro";
import DateTag from "../../components/date-tag.astro";
import PostContent from "../../components/post/post-content.astro";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

type Props = {
  post: CollectionEntry<"blog">;
};

const { post } = Astro.props;
const { title, description, date, tags, cover } = post.data;
---

<Layout title={post.data.title} description={post.data.description}>
  <div>
    <a href="/journal" class="back-button">‚Üê Back</a>
    <div>
      <h1>{post.data.title}</h1>
      <p class="post-summary">{post.data.description}</p>
    </div>
    <div class="meta">
      <DateTag date={post.data.date} />
      {post.data.tags?.map((tag) => <Tag tag={tag} />)}
    </div>
    {
      post.data.cover && (
        <figure class="cover-image">
        <img src={`${post.data.cover}?w=1200&q=80`} alt="cover" />
        </figure>
      )
    }
  </div>
  <article>
    <PostContent post={post} />
  </article>
</Layout>

<style>
  .back-button {
    display: inline-block;
    font-family: var(--mono);
    font-size: var(--desktop-body-sm);
    line-height: var(--lh-desktop-body-sm);
    color: var(--text-secondary-alt);
    text-decoration: none;
    margin-bottom: var(--spacing-06);
    transition: color 0.3s ease;
  }

  .back-button:hover {
    color: var(--accent);
  }

  @media screen and (max-width: 56em) {
    .back-button {
      font-size: var(--desktop-caption);
      line-height: var(--lh-desktop-caption);
      margin-bottom: var(--spacing-04);
    }
  }
</style>
